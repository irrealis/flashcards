defaults:
  deckName: Staging
  modelName: PWeave
  markdownTabLength: 2
  extraTags:
  - Textbooks
  - Math
  - Calculus
  - Calculus-ConceptsAndContexts
  - CCAC-01-FunctionsAndModels
  - CCAC-01.Review
notes:
- id: 1543449288919
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 01a: Let $f$ be the function whose graph is given. Estimate the value of $f(2)$.
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import matplotlib.ticker as ticker
      import numpy as np
      import sympy as sy

      import math

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return 5*sy.sin(1/8*sy.pi*x)
      p = sy.plot(
        (f(x), (x, -6, 6)),
        xlim = (-9, 9), ylim = (-6, 6),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      p._backend.process_series()
      x0, x1, y0, y1 = ax.axis()
      ax.set_xticks(np.arange(x0+1, x1))
      ax.set_yticks(np.arange(y0+1, y1))
      ax.grid(which='major')
      p._backend.plt.show()
      ```
    Back: |
      $$
      2.7
      $$
- id: 1543449293019
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 01b: Let $f$ be the function whose graph is given. Estimate the values of $x$ such that $f(x)=3$.
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import matplotlib.ticker as ticker
      import numpy as np
      import sympy as sy

      import math

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return 5*sy.sin(1/8*sy.pi*x)
      p = sy.plot(
        (f(x), (x, -6, 6)),
        xlim = (-9, 9), ylim = (-6, 6),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      p._backend.process_series()
      x0, x1, y0, y1 = ax.axis()
      ax.set_xticks(np.arange(x0+1, x1))
      ax.set_yticks(np.arange(y0+1, y1))
      ax.grid(which='major')
      p._backend.plt.show()
      ```
    Back: |
      $$
      2.3, \ 5.6
      $$
- id: 1543449296598
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 01c: Let $f$ be the function whose graph is given. State the domain of $f$.
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import matplotlib.ticker as ticker
      import numpy as np
      import sympy as sy

      import math

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return 5*sy.sin(1/8*sy.pi*x)
      p = sy.plot(
        (f(x), (x, -6, 6)),
        xlim = (-9, 9), ylim = (-6, 6),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      p._backend.process_series()
      x0, x1, y0, y1 = ax.axis()
      ax.set_xticks(np.arange(x0+1, x1))
      ax.set_yticks(np.arange(y0+1, y1))
      ax.grid(which='major')
      p._backend.plt.show()
      ```
    Back: |
      $$
      [-6,6]
      $$
- id: 1543449300119
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 01d: Let $f$ be the function whose graph is given. State the range of $f$.
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import matplotlib.ticker as ticker
      import numpy as np
      import sympy as sy

      import math

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return 5*sy.sin(1/8*sy.pi*x)
      p = sy.plot(
        (f(x), (x, -6, 6)),
        xlim = (-9, 9), ylim = (-6, 6),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      p._backend.process_series()
      x0, x1, y0, y1 = ax.axis()
      ax.set_xticks(np.arange(x0+1, x1))
      ax.set_yticks(np.arange(y0+1, y1))
      ax.grid(which='major')
      p._backend.plt.show()
      ```
    Back: |
      $$
      [-4,4]
      $$
- id: 1543449303769
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 01e: Let $f$ be the function whose graph is given. On what interval is $f$ increasing?
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import matplotlib.ticker as ticker
      import numpy as np
      import sympy as sy

      import math

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return 5*sy.sin(1/8*sy.pi*x)
      p = sy.plot(
        (f(x), (x, -6, 6)),
        xlim = (-9, 9), ylim = (-6, 6),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      p._backend.process_series()
      x0, x1, y0, y1 = ax.axis()
      ax.set_xticks(np.arange(x0+1, x1))
      ax.set_yticks(np.arange(y0+1, y1))
      ax.grid(which='major')
      p._backend.plt.show()
      ```
    Back: |
      $$
      [-4,4]
      $$
- id: 1543449307470
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 01f: Let $f$ be the function whose graph is given. Is $f$ one-to-one? Explain.
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import matplotlib.ticker as ticker
      import numpy as np
      import sympy as sy

      import math

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return 5*sy.sin(1/8*sy.pi*x)
      p = sy.plot(
        (f(x), (x, -6, 6)),
        xlim = (-9, 9), ylim = (-6, 6),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      p._backend.process_series()
      x0, x1, y0, y1 = ax.axis()
      ax.set_xticks(np.arange(x0+1, x1))
      ax.set_yticks(np.arange(y0+1, y1))
      ax.grid(which='major')
      p._backend.plt.show()
      ```
    Back: |
      No; it fails the Horizontal Line Test.
- id: 1543449311123
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 01g: Let $f$ be the function whose graph is given. Is $f$ even, odd, or neither even nor odd? Explain.
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import matplotlib.ticker as ticker
      import numpy as np
      import sympy as sy

      import math

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return 5*sy.sin(1/8*sy.pi*x)
      p = sy.plot(
        (f(x), (x, -6, 6)),
        xlim = (-9, 9), ylim = (-6, 6),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      p._backend.process_series()
      x0, x1, y0, y1 = ax.axis()
      ax.set_xticks(np.arange(x0+1, x1))
      ax.set_yticks(np.arange(y0+1, y1))
      ax.grid(which='major')
      p._backend.plt.show()
      ```
    Back: |
      Odd; its graph is symmetric about the origin.
- id: 1543450755145
  fields:
    Front: |
      CCAC 01.Review 03: If $f(x) = x^2 - 2x + 3$, evaluate the difference quotient
      $$
      \frac{f(a + h) - f(a)}{h}
      $$
    Back: |
      $$
      2a + h - 2
      $$
- id: 1543450755269
  tags: [Editing]
  fields:
    Front: |
      CCAC 01.Review 05: Find the domain and range of the function $f(x) = 2/(3x - 1)$. Write your answer in interval notation.
    Back: |
      $(-\infty, \frac{1}{3}) \cup (\frac{1}{3}, \infty), \ (-\infty, 0) \cup (0, \infty)$
- id: 1543450755369
  fields:
    Front: |
      CCAC 01.Review 07: Find the domain and range of the function $h(x) = \ln(x + 6)$. Write your answer in interval notation.
    Back: |
      $$
      (-6, \infty), \ \mathbb{R}
      $$
- id: 1543450755473
  fields:
    Front: |
      CCAC 01.Review 09a: Suppose that the graph of $f$ is given. Describe how the graph of the function $y = f(x) + 8$ can be obtained from the graph of $f$.
    Back: |
      Shift the graph 8 units upward.
- id: 1543450755570
  fields:
    Front: |
      CCAC 01.Review 09b: Suppose that the graph of $f$ is given. Describe how the graph of the function $y = f(x + 8)$ can be obtained from the graph of $f$.
    Back: |
      Shift the graph 8 units to the left.
- id: 1543450755671
  fields:
    Front: |
      CCAC 01.Review 09c: Suppose that the graph of $f$ is given. Describe how the graph of the function $y = 1 + 2f(x)$ can be obtained from the graph of $f$.
    Back: |
      Stretch the graph vertically by a factor of 2, then shift it 1 unit upward.
- id: 1543450755769
  fields:
    Front: |
      CCAC 01.Review 09d: Suppose that the graph of $f$ is given. Describe how the graph of the function $y = f(x - 2) - 2$ can be obtained from the graph of $f$.
    Back: |
      Shift the graph 2 units to the right and 2 units downward.
- id: 1543450755869
  fields:
    Front: |
      CCAC 01.Review 09e: Suppose that the graph of $f$ is given. Describe how the graph of the function $y = -f(x)$ can be obtained from the graph of $f$.
    Back: |
      Reflect the graph about the $x$-axis.
- id: 1543450755972
  fields:
    Front: |
      CCAC 01.Review 09f: Suppose that the graph of $f$ is given. Describe how the graph of the function $y = f^{-1}(x)$ can be obtained from the graph of $f$.
    Back: |
      Reflect the graph about the line $y = x$ (assuming $f$ is one-to-one).
- id: 1543450756069
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 11: Use transformations to sketch the graph of the function.
      $$
      y = -\sin{2x}
      $$
    Back: |
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import sympy as sy

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return -sy.sin(2*x)
      p = sy.plot(
        (f(x), (x, -15, 15)),
        xlim = (-15, 15), ylim = (-10, 10),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      ax.tick_params(
        axis = 'both',
        which = 'both',
        bottom = False,
        left = False,
        labelbottom = False,
        labelleft = False,
      )
      ax.text(0.2, 0.2, '$0$')
      ax.plot(sy.pi, 0, 'ko', markersize = 4)
      ax.text(sy.pi + 0.2, 0.2, '$\pi$')
      ax.text(2, 2, '$y = -\\sin{2x}$')
      p._backend.show()
      ```
- id: 1543450756169
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 13: Use transformations to sketch the graph of the function.
      $$
      y = \frac{1}{2}(1 + e^x)
      $$
    Back: |
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import sympy as sy

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return (1 + sy.E**x)/2
      p = sy.plot(
        f(x),
        xlim = (-4, 2), ylim = (-1, 3),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      ax.tick_params(
        axis = 'both',
        which = 'both',
        bottom = False,
        left = False,
        labelbottom = False,
        labelleft = False,
      )
      ax.text(-0.5, 1 + 0.2, '$y = \\frac{1}{2}(1 + e^x)$', horizontalalignment='right')
      ax.plot(0, 1, 'ko', markersize = 4)
      ax.text(0.1, 1.2, '$1$')
      ax.plot((-4, 2), (1/2, 1/2), linestyle = '--')
      ax.text(0.5, 0.5 + 0.2, '$y = \\frac{1}{2}$')
      p._backend.show()
      ```
- id: 1543450756273
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 15: Use transformations to sketch the graph of the function.
      $$
      f(x) = \frac{1}{x + 2}
      $$
    Back: |
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import sympy as sy

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      def f(x): return 1/(x + 2)
      p = sy.plot(
        f(x),
        xlim = (-6, 6), ylim = (-4, 4),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )

      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      ax.tick_params(
        axis = 'both',
        which = 'both',
        bottom = False,
        left = False,
        labelbottom = False,
        labelleft = False,
      )
      ax.text(0-0.1, 0-0.2, '$0$', verticalalignment = 'top', horizontalalignment = 'right')
      ax.plot(0, 1/2, 'ko', markersize = 4)
      ax.text(0+0.1, 1/2+0.2, '$\\frac{1}{2}$')
      ax.text(-2-0.2, 1, '$x = -2$', horizontalalignment = 'right')
      ax.text(1, 1, '$$y = \\frac{1}{x+2}$$')
      p._backend.show()
      ```
- id: 1543450756369
  fields:
    Front: |
      CCAC 01.Review 17a: Determine whether $f$ is even, odd, or neither even nor odd.
      $$
      f(x) = 2x^5 - 3x^2 + 2
      $$
    Back: |
      Neither.
- id: 1543450756469
  fields:
    Front: |
      CCAC 01.Review 17b: Determine whether $f$ is even, odd, or neither even nor odd.
      $$
      f(x) = x^3 - x^7
      $$
    Back: |
      Odd.
- id: 1543450756572
  fields:
    Front: |
      CCAC 01.Review 17c: Determine whether $f$ is even, odd, or neither even nor odd.
      $$
      f(x) = e^{-x^2}
      $$
    Back: |
      Even.
- id: 1543450756669
  fields:
    Front: |
      CCAC 01.Review 17d: Determine whether $f$ is even, odd, or neither even nor odd.
      $$
      f(x) = 1 + \sin{x}
      $$
    Back: |
      Neither.
- id: 1543450756773
  fields:
    Front: |
      CCAC 01.Review 19a: If $f(x) = \ln{x}$ and $g(x) = x^2 - 9$, find the function $f \circ g$ and its domain.
    Back: |
      $(f \circ g)(x) = \ln(x^2 - 9)$, $(-\infty, -3) \cup (3, \infty)$
- id: 1543450756881
  fields:
    Front: |
      CCAC 01.Review 19b: If $f(x) = \ln{x}$ and $g(x) = x^2 - 9$, find the function $g \circ f$ and its domain.
    Back: |
      $(g \circ f)(x) = (\ln{x})^2 - 9$, $(0, \infty)$
- id: 1543450756998
  fields:
    Front: |
      CCAC 01.Review 19c: If $f(x) = \ln{x}$, find the function $f \circ f$ and its domain.
    Back: |
      $(f \circ f)(x) = \ln{\ln{x}}$, $(1, \infty)$
- id: 1543450757094
  fields:
    Front: |
      CCAC 01.Review 19d: If $g(x) = x^2 - 9$, find the function $g \circ g$ and its domain.
    Back: |
      $(g \circ g)(x) = (x^2 - 9)^2 - 9$, $(-\infty, \infty)$
- id: 1543450757221
  tags: [requiresCoding]
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 21: Life expectancy improved dramatically in the 20th century. The table gives the life expectancy at birth (in years) of males born in the United States. Use a scatter plot to choose an appropriate type of model. Use your model to predict the life span of a male born in the year 2010.
      $$
      \begin{array}{|c|c|}
        \hline
        \text{Birth year} & \text{Life expectancy} \\
        \hline
        1900 & 48.3 \\
        1910 & 51.1 \\
        1920 & 55.2 \\
        1930 & 57.4 \\
        1940 & 62.5 \\
        1950 & 65.6 \\
        1960 & 66.6 \\
        1970 & 67.1 \\
        1980 & 70.0 \\
        1990 & 71.8 \\
        2000 & 73.0 \\
        \hline
      \end{array}
      $$
    Back: |
      $y = 0.2493x - 423.4818$; about 77.6 years.
      ```{python }
      import matplotlib.pyplot as plt
      import numpy as np

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = np.array((
        1900,
        1910,
        1920,
        1930,
        1940,
        1950,
        1960,
        1970,
        1980,
        1990,
        2000,
      ))
      y = np.array((
        48.3,
        51.1,
        55.2,
        57.4,
        62.5,
        65.6,
        66.6,
        67.1,
        70.0,
        71.8,
        73.0,
      ))

      m, b = np.polyfit(x, y, 1)

      f = m*x + b

      fig, ax = plt.subplots()
      ax.scatter(x, y)
      ax.plot(x, f)
      _=_
      print('y = {}x + {}'.format(m, b))
      print('m*2010 + b = {}'.format(m*2010 + b))
      ```
- id: 1543451770419
  fields:
    Front: |
      CCAC 01.Review 23: If $f(x) = 2x + \ln{x}$, find $f^{-1}(2)$.
    Back: |
      $1$.
- id: 1543451770544
  fields:
    Front: |
      CCAC 01.Review 25a: Find the exact value of the expression $e^{2\ln{3}}$.
    Back: |
      $9$.
- id: 1543451770671
  fields:
    Front: |
      CCAC 01.Review 25b: Find the exact value of the expression $\log_{10}{25} + \log_{10}{4}$.
    Back: |
      $2$.
- id: 1543451770801
  fields:
    Front: |
      CCAC 01.Review 27: The half-life of palladium-100, $^{100}\text{Pd}$, is four days. (So half of any given quantity of $^{100}\text{Pd}$ will disintegrate in four days.) The initial mass is one gram.
      a. Find the mass that remains after 16 days.
      b. Find the mass $m(t)$ that remains after $t$ days.
      c. Find the inverse of this function, and explain its meaning.
      d. When will the mass be reduced to 0.01 g?
    Back: |
      a. $\frac{1}{16}g$.
      b. $m(t) = 2^{-t/4}$.
      c. $t(m) = -4 \log_2{m}$; the time elapsed when there are $m$ grams of $^{100}\text{Pd}$.
      d. About 26.6 days.
- id: 1543451770920
  tags: [requiresCoding]
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 29: Graph members of the family of functions $f(x) = \ln(x^2 - c)$ for several values of $c$. How does the graph change when $c$ changes?
    Back: |
      For $c < 0$, $f$ is defined everywhere. As $c$ increases, the dip at $x = 0$ becomes deeper. For $c \ge 0$, the graph has asymptotes at $x = \pm\sqrt{c}$.
      ```{python }
      import sympy as sy
      import matplotlib.pyplot as plt
      import seaborn as sns

      with plt.style.context(('ggplot')):
        sns.set()
        plt.rc('text', usetex = True)
        plt.rc('font', family = 'serif')

        x = sy.symbols('x')
        def f(x, c): return sy.ln(x**2 - c)
        p = sy.plot(
          f(x, -4),
          f(x, -2),
          f(x, -1),
          f(x, 0),
          f(x, 1),
          f(x, 2),
          f(x, 4),
          xlim = (-5, 5), ylim = (-3, 3),
          xlabel = '$x$', ylabel = '$y$',
          show = False,
          legend = True,
        )
        colors = sns.color_palette('hls', len(p._series))
        for i, sp in enumerate(p):
          sp.line_color = colors[i]
        p.show()
      ```
- id: 1543451771026
  tags: [requiresCoding]
  useMarkdown: pweave
  fields:
    Front: |
      CCAC 01.Review 31:
      a. Sketch the curve represented by the parametric equations $x = e^t$, $y = \sqrt{t}$, $0 \le t \le 1$, and indicate with an arrow the direction in which the curve is traced as $t$ increases.
      b. Eliminate the parameter to find a Cartesian equation of the curve.
    Back: |
      a.
      ```{python }
      import sympy as sy
      import matplotlib.pyplot as plt
      import math

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      t = sy.symbols('t')
      def f(t): return sy.E**t, sy.sqrt(t), (t, 0, 1)
      def ff(t): return math.e**t, math.sqrt(t), (t, 0, 1)
      def aro(ax, f, s, d, w):
        def dx(a,b): return f(b)[0] - f(a)[0]
        def dy(a,b): return f(b)[1] - f(a)[1]
        return ax.arrow(f(s-d)[0], f(s-d)[1], dx(s-d, s+d), dy(s-d, s+d), head_width = w)
      p = sy.plotting.plot_parametric(
        f(t),
        xlabel = '$x$', ylabel = '$y$',
        xlim = (0, 6), ylim = (-1, 3),
        show = False,
      )
      if hasattr(p, '_backend'): p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax
      aro(ax, ff, 1/2, 0.001, 0.10)
      ax.plot(math.e, 1, 'ko', markersize = 4)
      ax.text(math.e + 0.1, 1, '$(e,1)$')
      p._backend.show()
      ```
      b. $y = \sqrt{\ln{x}}$.
