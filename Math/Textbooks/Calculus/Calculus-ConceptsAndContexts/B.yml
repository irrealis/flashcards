defaults:
  deckName: Staging
  modelName: PWeave
  markdownTabLength: 2
  extraTags:
  - Textbooks
  - Math
  - Calculus
  - Calculus-ConceptsAndContexts
  - CCAC-B-CoordinateGeometry
notes:
- id: 1547063863427
  fields:
    Front: |
      CCAC B 01: Find the distance between the points $(1, 1)$ and $(4, 5)$.
    Back: |
      5
    Annotations: ''
- id: 1547063863523
  fields:
    Front: |
      CCAC B 03: Find the slope of the line through $P(-3, 3)$ and $Q(-1, -6)$.
    Back: |
      $-\frac{9}{2}$
    Annotations: ''
- id: 0
  skip: true
  tags:
  - ToDo
  fields:
    Front: |
      CCAC B 05: Show that the points $(-2,9)$, $(4,6)$, $(1,0)$, and $(-5,3)$ are the vertices of a square.
    Back: |
      ...
    Annotations: ''
- id: 1547063863671
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 07: Sketch the graph of the equation $x=3$.
    Back: |
      ```{python echo = False}
      import sympy as sy
      import matplotlib.pyplot as plt

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      def fx(t): return 3
      def fy(t): return t

      t = sy.symbols('t')
      p = sy.plotting.plot_parametric(
        (fx(t), fy(t), (t, -2, 4)),
        xlim = (-2, 4), ylim = (-2, 2),
        xlabel = '$x$', ylabel = '$y$',
      )
      ```
    Annotations: ''
- id: 1547063866721
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 09: Sketch the graph of the equation $xy=0$.
    Back: |
      ```{python echo = False}
      import sympy as sy
      import matplotlib.pyplot as plt

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      t = sy.symbols('t')
      p = sy.plotting.plot_parametric(
        (0, t, (t, -2, 4)),
        (t, 0, (t, -2, 4)),
        xlim = (-2, 4), ylim = (-2, 2),
        xlabel = '$x$', ylabel = '$y$',
        show = False,
      )
      if hasattr(p, '_backend'):
        p._backend.close()
      p._backend = p.backend(p)
      fg, ax = p._backend.fig, p._backend.ax

      ax.text(0.5, 0.5, '$x=0$ or $y=0$')
      p._backend.show()
      ```
    Annotations: ''
- id: 1547063869597
  fields:
    Front: |
      CCAC B 11: Find an equation of the line that satisfies the given conditions.
      Through $(2,-3)$, slope $6$.
    Back: |
      $y = 6x - 15$
    Annotations: ''
- id: 1547063869698
  fields:
    Front: |
      CCAC B 13: Find an equation of the line that satisfies the given conditions.
      Through $(2,1)$ and $(1,6)$.
    Back: |
      $5x + y = 11$
    Annotations: ''
- id: 1547063869796
  fields:
    Front: |
      CCAC B 15: Find an equation of the line that satisfies the given conditions.
      Slope $3$, $y$-intercept $-2$.
    Back: |
      $y = 3x - 2$
    Annotations: ''
- id: 1547063869921
  fields:
    Front: |
      CCAC B 17: Find an equation of the line that satisfies the given conditions.
      $x$-intercept $1$, $y$-intercept $-3$.
    Back: |
      $y = 3x - 3$
    Annotations: ''
- id: 1547063870029
  fields:
    Front: |
      CCAC B 19: Find an equation of the line that satisfies the given conditions.
      Through $(4,5)$, parallel to the $x$-axis.
    Back: |
      $y = 5$
    Annotations: ''
- id: 1547063870125
  fields:
    Front: |
      CCAC B 21: Find an equation of the line that satisfies the given conditions.
      Through $(1,-6)$, parallel to the line $x + 2y = 6$.
    Back: |
      $x + 2y + 11 = 0$
    Annotations: ''
- id: 1547063870226
  fields:
    Front: |
      CCAC B 23: Find an equation of the line that satisfies the given conditions.
      Through $(-1,-2)$, perpendicular to the line $2x+5y+8=0$.
    Back: |
      $5x - 2y + 1 = 0$
    Annotations: ''
- id: 1547063870372
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 25: Find the slope and $y$-intercept of the line, and draw its graph.
      $$$$
      x + 3y = 0
      $$$$
    Back: |
      $m = -\frac{1}{3}$, $b = 0$
      ```{python echo = False}
      import sympy as sy
      import matplotlib.pyplot as plt

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      p = sy.plot(
        -x/3,
        xlim = (-3, 3), ylim = (-2, 2),
        xlabel = '$x$', ylabel = '$y$',
      )
      ```
    Annotations: ''
  tags: []
- id: 1547063873596
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 27: Find the slope and $y$-intercept of the line, and draw its graph.
      $$$$
      3x - 4y = 12
      $$$$
    Back: |
      $m = \frac{3}{4}$, $b = -3$
      ```{python echo = False}
      import sympy as sy
      import matplotlib.pyplot as plt

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x = sy.symbols('x')
      p = sy.plot(
        3*x/4 - 3,
        xlim = (-2, 7), ylim = (-4, 2),
        xlabel = '$x$', ylabel = '$y$',
      )
      ```
    Annotations: ''
  tags: []
- id: 1547063876395
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 29: Sketch the region in $xy$-plane.
      $$$$
      \{(x,y) : x<0\}
      $$$$
    Back: |
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import numpy as np

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x0 = np.arange(-3, 1)
      y0 = x0*0

      fig, ax = plt.subplots()
      ax.fill_between(x0, -2, 2)

      ax.plot((-0,-0), (-2,2), color = 'k', linewidth = 2, linestyle = '--')
      ax.axhline(y = 0, color = 'k', linewidth = 0.5)
      ax.axvline(x = 0, color = 'k', linewidth = 0.5)
      ax.spines['top'].set_visible(False)
      ax.spines['right'].set_visible(False)
      ax.spines['bottom'].set_visible(False)
      ax.spines['left'].set_visible(False)
      ax.set_xlabel("$x$", position=(1, 0))
      ax.set_ylabel("$y$", position=(0, 1))
      plt.xlim((-3, 3))
      plt.ylim((-2, 2))
      plt.show()
      ```
    Annotations: ''
  tags: []
- id: 1547063879221
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 31: Sketch the region in $xy$-plane.
      $$$$
      \{(x,y) : |x| \le 2\}
      $$$$
    Back: |
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import numpy as np

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x0 = np.arange(-2, 3)
      y0 = x0*0

      fig, ax = plt.subplots()
      ax.fill_between(x0, -2, 2)

      ax.plot((-2,-2), (-2,2), color = 'k', linewidth = 2)
      ax.plot((2,2), (-2,2), color = 'k', linewidth = 2)
      ax.axhline(y = 0, color = 'k', linewidth = 0.5)
      ax.axvline(x = 0, color = 'k', linewidth = 0.5)
      ax.spines['top'].set_visible(False)
      ax.spines['right'].set_visible(False)
      ax.spines['bottom'].set_visible(False)
      ax.spines['left'].set_visible(False)
      ax.set_xlabel("$x$", position=(1, 0))
      ax.set_ylabel("$y$", position=(0, 1))
      plt.xlim((-3, 3))
      plt.ylim((-2, 2))
      plt.show()
      ```
    Annotations: ''
  tags: []
- id: 1547063881846
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 33: Sketch the region in $xy$-plane.
      $$$$
      \{(x,y) : 0 \le y \le 4 \text{ and } x \le 2\}
      $$$$
    Back: |
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import numpy as np

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      x0 = np.arange(-3, 3)
      y0 = x0*0

      fig, ax = plt.subplots()
      ax.fill_between(x0, 0, 4)

      ax.plot((-3,2), (4,4), color = 'k', linewidth = 2)
      ax.plot((2,2), (4,0), color = 'k', linewidth = 2)
      ax.axhline(y = 0, color = 'k', linewidth = 0.5)
      ax.axvline(x = 0, color = 'k', linewidth = 0.5)
      ax.spines['top'].set_visible(False)
      ax.spines['right'].set_visible(False)
      ax.spines['bottom'].set_visible(False)
      ax.spines['left'].set_visible(False)
      ax.set_xlabel("$x$", position=(1, 0))
      ax.set_ylabel("$y$", position=(0, 1))
      plt.xlim((-3, 6))
      plt.ylim((-0, 6))
      plt.show()
      ```
    Annotations: ''
  tags: []
- id: 1547063884021
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 35: Sketch the region in $xy$-plane.
      $$$$
      \{(x,y) : 1+x \le y \le 1-2x\}
      $$$$
    Back: |
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import numpy as np

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      fig, ax = plt.subplots()

      x = np.arange(-4, 5)
      y0 = x + 1
      y1 = -2*x + 1
      ax.plot(x, y0, color = 'k', linewidth = 2)
      ax.plot(x, y1, color = 'k', linewidth = 2)

      x0 = np.arange(-4, 1)
      y00 = x0 + 1
      y01 = -2*x0 + 1
      ax.fill_between(x0, y00, y01)

      ax.axhline(y = 0, color = 'k', linewidth = 0.5)
      ax.axvline(x = 0, color = 'k', linewidth = 0.5)
      ax.spines['top'].set_visible(False)
      ax.spines['right'].set_visible(False)
      ax.spines['bottom'].set_visible(False)
      ax.spines['left'].set_visible(False)
      ax.set_xlabel("$x$", position=(1, 0))
      ax.set_ylabel("$y$", position=(0, 1))
      plt.xlim((-4, 4))
      plt.ylim((-3, 3))
      plt.show()
      ```
    Annotations: ''
  tags: []
- id: 1547063887121
  fields:
    Front: |
      CCAC B 37: Find an equation of a circle that satisfies the given conditions.
      Center $(3, -1)$, radius $5$.
    Back: |
      $(x - 3)^2 + (y + 1)^2 = 25$
    Annotations: ''
  tags: []
- id: 1547063887239
  fields:
    Front: |
      CCAC B 39: Show that the equation represents a circle, and find the center and radius.
      $$$$
      x^2 + y^2 - 4x + 10y + 13 = 0
      $$$$
    Back: |
      $(2, -5)$, $4$
    Annotations: ''
  tags: []
- id: 1547063887348
  fields:
    Front: |
      CCAC B 41: Show that the lines $2x-y=4$ and $6x-2y=10$ are not parallel, and find their point of intersection.
    Back: |
      $(1, -2)$
    Annotations: ''
  tags: []
- id: 0
  skip: true
  fields:
    Front: |
      CCAC B 43: Show that the midpoint of the line segment from $P_1(x_1,y_1)$ to $P_2(x_2,y_2)$ is
      $$$$
      \left(\frac{x_1 + x_2}{2}, \frac{y_1+y_2}{2}\right)
      $$$$
    Back: |
      ...
    Annotations: ''
- id: 1547063887446
  fields:
    Front: |
      CCAC B 45: Find an equation of the perpendicular bisector of the line segment joining the points $A(1,4)$ and $B(7,-2)$.
    Back: |
      $y = x - 3$
    Annotations: ''
  tags: []
- id: 0
  skip: true
  fields:
    Front: >
      CCAC B 47: Suppose that $P(x,y)$ is any point on the parabola with focus $(0,p)$
      and directrix $y = -p$. (See CCAC-B Figure 14.) Use the definition of a parabola
      to show that $x^2=4py$.
    Back: |
      ...
    Annotations: ''
- id: 0
  skip: true
  fields:
    Front: >
      CCAC B 49: Suppose an ellipse has foci $(\pm c,0)$, and that the sume of the
      distances from any point $P(x,y)$ on the ellipse to the foci is $2a$. Show that
      the coordinates of $P$ satisfy CCAC-B Equation 1.
    Back: |
      ...
    Annotations: ''
- id: 0
  skip: true
  fields:
    Front: |
      CCAC B 51: Use the definition of a hyperbola to derive CCAC-B Equation 2 for a hyperbola with foci $(\pm c,0)$
    Back: |
      ...
    Annotations: ''
- id: 1547063887576
  useMarkdown: pweave
  fields:
    Front: |
      CCAC B 53: Sketch the region bounded by the curves.
      $x + 4y = 8$ and $x = 2y^2 - 8$.
    Back: |
      ```{python echo = False}
      import matplotlib.pyplot as plt
      import numpy as np

      plt.rc('text', usetex = True)
      plt.rc('font', family = 'serif')

      fig, ax = plt.subplots()

      y0 = np.arange(-5, 5.05, 0.05)
      x0 = 8 - 4*y0
      x1 = 2*y0**2 - 8

      y2 = np.arange(-4, 2.05, 0.05)
      x2 = 8 - 4*y2
      x3 = 2*y2**2 - 8

      ax.plot(x0, y0, color = 'k', linewidth = 2)
      ax.plot(x1, y0, color = 'k', linewidth = 2)

      ax.fill_betweenx(y2, x3, x2)

      ax.axhline(y = 0, color = 'k', linewidth = 0.5)
      ax.axvline(x = 0, color = 'k', linewidth = 0.5)
      ax.spines['top'].set_visible(False)
      ax.spines['right'].set_visible(False)
      ax.spines['bottom'].set_visible(False)
      ax.spines['left'].set_visible(False)
      ax.set_xlabel("$x$", position=(1, 0))
      ax.set_ylabel("$y$", position=(0, 1))
      plt.xlim((-10, 30))
      plt.ylim((-5, 5))
      plt.show()
      ```
    Annotations: ''
  tags: []
- id: 0
  skip: true
  fields:
    Front: >
      CCAC B 55: Let $P(x_1,y_1)$ be a point on the ellipse $x^2/a^2 + y^2/b^2 = 1$
      with foci $F_1$ and $F_2$, and let $\alpha$ and $\beta$ be the angles between
      the lines $PF_1$, $PF_2$ and the ellipse, as shown in the figure. Prove that
      $\alpha=\beta$. This explains how whispering galleries and lithotripsy work.
      Sound coming from one focus is reflected, and passes through the other focus.
      (Hint: use the formula in problem 17 on CCAC page 251 to show that $\tan\alpha

      = \tan\beta$.)
    Back: |
      ...
    Annotations: ''
