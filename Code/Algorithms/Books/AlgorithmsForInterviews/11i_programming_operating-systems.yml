defaults:
  deckName: Staging
  modelName: BasicMathJax
  tags:
  - Code
  - Algorithms
  - Books
  - AlgorithmsForInterviews
  - 11-Programming
  - 11i-OperatingSystems

  fields:
    Python: "**To-do: Python.**"
    Java: "**To-do: Java.**"
    C++: "**To-do: C++.**"
    Back: "**To-do: Back.**"

  markdownTabLength: 4


notes:


- fields:
    Front: |
      ## 11.15.01: Operating Systems

      What is a system call?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 95.


- fields:
    Front: |
      ## 11.15.02: Operating Systems

      How is a system call different from a library call?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 95.


- fields:
    Front: |
      ## 11.15.03: Operating Systems

      What is a device driver?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 96.


- fields:
    Front: |
      ## 11.15.04: Operating Systems

      What is livelock? deadlock?

      Give an example of each.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 96.


- fields:
    Front: |
      ## 11.15.05: Operating Systems

      What is a race? What can you do to prevent races?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 96.


- fields:
    Front: |
      ## 11.15.06: Operating Systems

      What is a mutex? What are semaphores? How are they implemented?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 96.


- fields:
    Front: |
      ## 11.15.07: Operating Systems

      Give examples of system calls that are not related to input-output.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 96.


- fields:
    Front: |
      ## 11.15.08: Operating Systems

      Give examples of library functions that call a system function all the time, none of the time, and some of the time.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 96.
