defaults:
  deckName: Staging
  modelName: CodingProblems
  tags:
  - Code
  - Algorithms
  - Books
  - AlgorithmsForInterviews
  - 04-AlgorithmsOnGraphs
  - 04a-GraphSearch

  fields:
    Python: "**To-do: Python.**"
    Java: "**To-do: Java.**"
    C++: "**To-do: C++.**"

  markdownTabLength: 4


notes:

- fields:
    Front: |
      ## 04.01: Searching a maze

      It is natural to apply graph models and algorithms to spatial problems. Consider a black and white digitized image of a maze --- white pixels represent open areas and black pixels are walls. There are two special pixels: one is designated the entrance and the other is the exit.

      Given a two-dimensional matrix of black and white entries representing a maze with designated entrance and exit points, find a path from the entrance to the exit, if one exists.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 42-3.


- fields:
    Front: |
      ## 04.02: Order nodes in a binary tree by depth

      There are various traversals that can be performed on a tree: in-order, pre-order, and post-order are three natural examples.

      How would you efficiently return an array \\(A[0 \ldots h]\\), where \\(h\\) is the height of the tree and \\(A[i]\\) is the head of a linked list of all the nodes in the tree that are at height \\(i\\)?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 43.


- fields:
    Front: |
      ## 04.03: Connectedness

      A connected graph is one for which, given any vertices \\(u\\) and \\(v\\), there exists a path from \\(u\\) to \\(v\\). The notion of connectedness holds for both directed and undirected graphs --- for undirected graphs, we sometimes simply say there exists a path between \\(u\\) and \\(v\\).

      Intuitively, some graphs are more connected than others --- e.g., a clique is more connected than a tree. To be more quantitative, we could refer to a graph as being \\(2\forall\\)-connected if it remains connected even if any single edge is removed. A graph is \\(2\exists\\)-connected if there exists an edge whose removal leaves the graph connected.

      One application of this idea is in fault tolerance for data networks. Suppose you are given a set of datacenters connected through a set of dedicated point-to-point links. You want to be able to reach from any datacenter to any other datacenter through a combination of these dedicated links. Sometimes one of these links can become temporarily out of service and you want to ensure that your network can sustain up to one faulty link. How can you verify this?

      Let \\(G = (V , E)\\) be a connected undirected graph. How would you efficiently check if \\(G\\) is \\(2\exists\\)-connected? Can you make you algorithm run in \\(O(|V|)\\) time? How would you check if \\(G\\) is \\(2\forall\\)-connected?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 43.


- fields:
    Front: |
      ## 04.04: PCB wiring

      Consider a collection of \\(p\\) electrical pins. For each pair of pins, there may or may not be a wire joining them. There are \\(w\\) pairs of pins with a wire joining them.

      Give an \\(O(p + w)\\) time algorithm that determines if it is possible to place some of the pins on the left half of a PCB and the rest of the right half such that each wire is between a pin on the left and a pin on the right. Your algorithm should return a placement, should one exist.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 43.


- fields:
    Front: |
      ## 04.05: Extended contacts

      You are given a social network. Specifically, it consists of a set of individuals and for each individual, a list of his contacts. The contact relationship need not be symmetric --- \\(A\\) may be a contact of \\(B\\) but \\(B\\) may not be a contact of \\(A\\).) Let's define \\(C\\) to be an extended contact of \\(A\\) if he is either a contact of \\(A\\) or a contact of an extended contact of \\(A\\).

      Devise an efficient algorithm which takes a social network and computes for each individual his extended contacts.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 44.


- fields:
    Front: |
      ## 04.06: Euler tour

      An Euler tour of a connected directed graph \\(G = (V, E)\\) is a cycle that includes each edge of \\(G\\) exactly once; it may repeat vertices more than once.

      Design a linear-time algorithm to find an Euler tour if one exists.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 44.


- fields:
    Front: |
      ## 04.07: Ephemeral state in a finite state machine

      A finite state machine (FSM) is a set of states \\(S\\), a set of inputes \\(I\\), and a transition function \\(T: S \times I \rightarrow S\\). If \\(T(s, i) = u\\), we say that _\\(s\\) leads to \\(u\\)_ on application of input \\(i\\). The transition function \\(T\\) can be generalized to sequences of inputs -- if \\(\iota = \langle i_0, i_1, \ldots, i_{n-1} \rangle\\), the \\(T(s, \iota) = s\\) if \\(n=0\\); otherwise, \\(T(s, \iota) = T(T(s, \langle i_0, i_1, \ldots, i_{n-2} \rangle), i_{n-1})\\).

      The state \\(e\\) is said to be _ephemeral_ if there is a sequence of inputs \\(\alpha\\) such that there does not exist an input sequence \\(\beta\\) for which \\(T(T(e, \alpha), \beta)) = e\\). Informally, \\(e\\) is ephemeral if there is a possibility of the FSM starting at \\(e\\) and getting to a state \\(f\\) from which it cannot return to \\(e\\).

      Define an efficient algorithm which takes an FSM and returns the set of ephemeral states.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 44.


- fields:
    Front: |
      ## 04.08: Tree diameter

      Packets in Ethernet LANs are routed according to the unique path in a tree whose vertices correspond to clients and edges correspond to physical connections between the clients. In this problem, we want to design an algorithm for finding the "worst-case" route, i.e., the two clients that are furthest apart.

      Let \\(T\\) be a tree, where each edge is labeled with a real-valued distance. Define the diameter of \\(T\\) to be the length on a longest path in \\(T\\). Design an efficient algorithm to compute the diameter of \\(T\\).

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 44-5.


- fields:
    Front: |
      ## 04.09: Timing analysis

      A combinational logic network consists of primary inputs and logic gates. Some of the gates may be designated as being primary outputs. Each gate has an output and a number of inputs --- these inputs may be primary inputs or the outputs of other gates. A cycle of gates is defined as a sequence of gates \\(\langle g_0,g_1,\ldots,g_{n-1},g_0 \rangle\\) starting and ending at the same gate such that for each consecutive pair of gates in the sequence, the first gate is an input to the second gate. Cycles of gates are disallowed.

      Each gate has a fixed delay. A change at the primaryè®©lput propagates through the logic network and eventually the output of every gate stops changing.

      Given a logic network with primary inputs changing, find the smallest time after which all the primary outputs no longer change.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 45.


- fields:
    Front: |
      ## 04.10: Team photo day --- 1

      You are a photographer for a soccer meet. You will be taking pictures of pairs of opposing teams. Each team has 20 players on its roster. Each picture will consist of two rows of players, one row for each of the two teams. You want to place the players so that if Player \\(A\\) stands behind Player \\(B\\), he must be taller than Player \\(B\\).

      Describe an efficient method that takes as input two the heights of the players in the teams and checks if it is possible to place players to take the picture -- if it is possible, your function should print which team comes to the front and the order in which the players appear. How would you generalize your approach to determine the largest number of teams that can be photographed simultaneously subject to the same constraints?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 45.


- fields:
    Front: |
      ## 04.11: Assigning radio frequencies

      If two neighboring radio stations are using the same radio frequency, there would be a region geographically between them where the signal from both stations would be equally strong and the resulting interference would cause neither of the signals to be usable. Hence neighboring radio stations try to pick different frequencies. Consider the problem where we have just two frequencies available and we are given a neighborhood graph of a set of radio stations. We are supposed to assign the frequencies to the radio stations such that the interference is minimized. Suppose we are interested in a simpler problem where we are happy if for any given radio station, the majority of its neighbors use a different frequency from the given station. This can be modeled as a graph coloring problem.

      Let \\(G = (V, E)\\) be an undirected graph. A two-coloring of \\(G\\) is a function assigning each vertex of \\(G\\) to black or white. Call a two-coloring diverse if each vertex has at least half its neighbors opposite in color to itself.

      Does every graph have a diverse coloring? How would you compute a diverse coloring, if it exists?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 45-6.
