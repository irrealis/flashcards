defaults:
  deckName: Staging
  modelName: CodingProblems
  tags:
  - Code
  - Algorithms
  - Books
  - AlgorithmsForInterviews
  - 04-AlgorithmsOnGraphs
  - 04b-AdvancedGraphAlgorithms

  fields:
    Python: "**To-do: Python.**"
    Java: "**To-do: Java.**"
    C++: "**To-do: C++.**"

  markdownTabLength: 4


notes:

- fields:
    Front: |
      ## 04.12: Shortest path with fewest edges

      In the usual formulation of the shortest path problem, the number of edges in the path is not a consideration.

      Heuristically, if we did want to avoid paths with a large number of edges, we can add a small amount to the cost of each edge. However depending on the structure of the graph and the edge costs, this may not result in the shortest path.

      Design an algorithm which takes as input a graph \\(G = (V , E)\\), directed or undirected, a nonnegative cost function on \\(E\\) and vertices \\(s\\) and \\(t\\); your algorithm should output a path with the fewest edges amongst all shortest paths from \\(s\\) to \\(t\\).

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 47.


- fields:
    Front: |
      ## 04.13: Counting shortest paths

      There may be many shortest paths between two vertices in a graph. It is commonly the case that a single shortest path is required, possibly one with the fewest edges, as in Problem 4.12. Sometimes we want to know the number of shortest paths, e.g., when analyzing the structure of a Boolean function or checking the stability of a system.

      Develop an efficient algorithm that computes the number of shortest paths between vertices \\(s\\) and \\(t\\) in an undirected graph with unit cost edges.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 47.


- fields:
    Front: |
      ## 04.14: Random directed acyclic graph

      You are given a map with a set of cities connected by roads of known lengths.

      A storm has made some roads uncrossable. For each road, you know the probability of the road being uncrossable. A given path consisting of a set of roads is considered uncrossable if any of the roads in the path is uncrossable.

      Find a path between a given pair of cities that is the minimum length path amongst all the paths for which the probability of being crossable is greater than 0.9.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 47.


- fields:
    Front: |
      ## 04.15: Shortest paths in the presence of randomization

      You are given a map to a maze of rooms interconnected by one-way corridors. The map specifies a set of entrance rooms and a treasure room. Some of the rooms are special --- when you arrive at a special room, you are randomly transported out through one of the one-way corridors leading out of it. The map designates which rooms are special. You are also told that the way the maze is designed is that once you leave a room, there is no way of coming back to it.

      Find a strategy which gets you to the treasure room in the minimum expected time.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 47-8.


- fields:
    Front: |
      ## 04.16: Traveling salesman with a choice

      Suppose you are a salesman with a set of cities to visit. If you visit city \\(i\\), you can make \\(p(i)\\) profit. The cost of going from city \\(i\\) to city \\(j\\) is \\(c(i , j) > O\\). You want to establish a route for yourself such that you start from a city, visit a set of cities, and then come back to the original city. You can choose to ignore certain cities if you like. Your objective is to maximize the ratio of profit-to-cost.

      Devise an efficient algorithm for finding a route which maximizes the ratio of the total profit to the total cost.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 48.
