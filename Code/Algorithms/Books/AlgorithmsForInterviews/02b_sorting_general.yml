deckName: Staging
modelName: CodingProblems
tags:
- Code
- Algorithms
- Books
- AlgorithmsForInterviews
- 02-Sorting
- 02b-General

markdownTabLength: 4

notes:


- Front: |
    ## 02.02: TeraSort

    The sorting algorithms alluded to above assume that all the data you need to sort will fit in RAM. What if your data will not fit in memory?

    Sort a file containing \\(10^{12}\\) 100-byte strings.

    --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 24.

  Python: |
    **To-do: Python.**

  Java: |
    **To-do: Java.**

  C++: |
    **To-do: C++.**


- Front: |
    ## 02.03 Finding the winner and runner-up

    There are 128 players participating in a tennis tournament. Assume that the "\\(x\\) beats \\(y\\)" relationship is transitive, i.e., for all players A, B, and C, if A beats B and B beats C, then A beats C.

    What is the least number of matches we need to organize to find the best player? How many matches do you need to find the best and the second best player?

    --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 24.

  Python: |
    **To-do: Python.**

  Java: |
    **To-do: Java.**

  C++: |
    **To-do: C++.**


- Front: |
    ## 02.04 Finding the min and max simultaneously

    Given a set of numbers, you can find either the min or max of the set in \\(N-1\\) comparisoms each. whm you need to find both, can you do better than \\(2N-3\\) comparisons?

    Find the min and max elements from a set of \\(N\\) elements using no more than \\(\frac{3N}{2}-1\\) comparisons.

    --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 24.

  Python: |
    **To-do: Python.**

  Java: |
    **To-do: Java.**

  C++: |
    **To-do: C++.**


- Front: |
    ## 02.05 Efficient trials

    You are the coach of a cycling team with 25 members and need to determine the fastest, second-fastest, and third-fastest cyclists for selection to the Olympic team.

    You will be evaluating the cyclists using a time-trial course on which only 5 cyclists can race at a time. You can use the completion times from a time-trial to rank the 5 cyclists amongst themselves --- no ties are possible. Because conditions can change over time, you cannot compare performances across different time-trials. The relative speeds of cyclists does not change --- if A beats B in one time-trial and B beats C in another time-trial, then A is guaranteed to beat C if they are in the same time-trial.

    What is the minimum number of time-trials needed to determine who to send to the Olympics?

    --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 24-5.

  Python: |
    **To-do: Python.**

  Java: |
    **To-do: Java.**

  C++: |
    **To-do: C++.**
