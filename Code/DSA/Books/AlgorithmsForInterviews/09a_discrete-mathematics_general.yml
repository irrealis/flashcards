defaults:
  deckName: Staging
  modelName: BasicMathJax
  tags:
  - Code
  - Algorithms
  - Books
  - AFI-AlgorithmsForInterviews
  - AFI-09-DiscreteMathematics
  - AFI-09a-General
  fields:
    Python: "**To-do: Python.**"
    Java: "**To-do: Java.**"
    C++: "**To-do: C++.**"
    Back: "**To-do: Back.**"
  markdownTabLength: 4
notes:
- id: 1536203074637
  modelName: CodingProblems
  fields:
    Front: |
      ## 09.01: Computing the binomial coefficients

      Design an efficient algorithm for computing \\(\binom{n}{k}\\) with the property that it never overflows if \\(\binom{n}{k}\\) can be represented as an `int`; assume \\(n\\) and \\(k\\) are `int`s.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 73-4.
- id: 1536203074671
  fields:
    Front: |
      ## 09.02: Climbing stairs

      You are climbing a staircase with \\(N\\) steps. Every time you can jump over either one step or two steps.

      How many ways are there to get to the top of the staircase?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 74.
- id: 1536203074691
  fields:
    Front: |
      ## 09.03: Ramsey Theory

      This problem illustrates Ramsey's theorem.

      There are six guests at a party such that any two guests either know each other or do not know each other. Prove that there is a subset of three guests who either all know each other, or all do not know each other.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 74.
- id: 1536203074726
  fields:
    Front: |
      ## 09.04: 500 doors

      There are 500 closed doors off a corridor. A person walks through the corridor and opens every door. Another person walks through the corridor and closes every alternate door. Continuing in this manner, the \\(i\\)-th person comes and toggles the position of every \\(i\\)-th door starting from door \\(i\\).

      How many doors will be open at the end after the 500-th person has passed through the doors?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 74.
- id: 1536203074787
  fields:
    Front: |
      ## 09.05: Height determination

      You are given a number of identical balls and a building with \\(N\\) floors. You know that there is an integer \\(X < N\\) such that the ball will break if it is dropped from any floor \\(X\\) or higher but will remain intact if dropped from a floor below \\(X\\).

      Given \\(K\\) balls and \\(N\\) floors, what is the minimum number of ball drops that are required to determine \\(X\\) in the worst case?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 74-5.
- id: 1536203074839
  modelName: CodingProblems
  fields:
    Front: |
      ## 09.06: Betting on card colors

      A deck of 52 playing cards is shuffled. The deck is placed face-down on a table. You can place a bet on the color of the top card at even odds. After you have placed your bet, the card is revealed to you and discarded. Betting continues till the deck is exhausted. On any card, you can bet any amount from 0 to all the money you have, and the odds are always even.

      You begin with one dollar. It is known that if you can bet arbitrary fractions of the money you have, the maximum amount of money that you guarantee you can win, regardless of the order in which the cards appear, is \\(2^{52}/\binom{52}{26} \approx 9.08132955\\). However, you are allowed to bet only in penny increments. Write a program to compute a tight lower bound on the amount you can win under this restriction.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 74-5.
