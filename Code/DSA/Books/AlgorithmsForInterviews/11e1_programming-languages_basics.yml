defaults:
  deckName: Staging
  modelName: CodingProblems
  tags:
  - Code
  - Algorithms
  - Books
  - AlgorithmsForInterviews
  - 11-Programming
  - 11e-ProgrammingLanguages
  - 11e1-Basics

  fields:
    Python: "**To-do: Python.**"
    Java: "**To-do: Java.**"
    C++: "**To-do: C++.**"
    Back: "**To-do: Back.**"

  markdownTabLength: 4


notes:


- fields:
    Front: |
      ## 11.11.1.01: Programming languages --- basics

      What are the basic types? How many bits does it take to represent them

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- fields:
    Front: |
      ## 11.11.1.02: Programming languages --- basics

      What do floating-point numbers look like in memory? Specifically, how many bits are there, and what sequence do the bits appear in?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.03: Programming languages --- basics

      What is two's-complement notation?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.04: Programming languages --- basics

      How would you implement a bit-vector class?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.05: Programming languages --- basics

      Does the check `x == x + 1` always return false for integer `x`?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- fields:
    Front: |
      ## 11.11.1.06: Programming languages --- basics

      What do composite objects look like in memory?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.07: Programming languages --- basics

      What is the difference between an interpreted and a compiled language?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.08: Programming languages --- basics

      What is garbage collection?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- fields:
    Front: |
      ## 11.11.1.09: Programming languages --- basics

      How would you determine if call stacks grow up or down relative to memory addresses?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- fields:
    Front: |
      ## 11.11.1.10: Programming languages --- basics

      Give an example of a memory leak.

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.11: Programming languages --- basics

      What is tail recursion? How can it be removed automatically?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.12: Programming languages --- basics

      Is the natural recursive program for computing \\(n!\\) tail recursive?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.13: Programming languages --- basics

      Your manager reads an online article that says it is ten times faster to code in Python than in C++. He wants you to code exclusively in Python from now on. What would you say to him?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.


- modelName: BasicMathJax
  fields:
    Front: |
      ## 11.11.1.14: Programming languages --- basics

      What does an executable look like as a sequence of bytes?

      --- Aziz and Prakash; _Algorithms for Interviews_; version 1.0.0 (September 1, 2010); p 93.
